browser {

  type = "chrome"
  #type = "edge"
  #type = "ie"
  #type = "firefox"
  #type = "opera"
  #type = "safari"

  window {

    maximized = "false"
    dimension = [1280, 960]

  }

}

web.driver {

  type = "standard"
  #type = "remote"
  #type = "session-reusable-remote"

  remote.url = "http://127.0.0.1:4444/wd/hub"

  executable {

    chrome = "D:\\chromedriver.exe"
    ie = "D:\\IEDriverServer.exe"

  }

  wait {

    timeout = "30"
    poll = "500"
    utility = "5"

  }

}

web.element {

  #
  # Set this property if you believe the call to WebElement.isEnabled() is too soon than
  # expected (i.e. the script to enable the element in the webpage is slower than test).
  # Set to 0 to turn this off.
  #
  enable.latency = 100

  interactibility.precondition = "present"
  #interactibility.precondition = "visible"
  #interactibility.precondition = "clickable"

  # In some situation the loading indicating element is not loaded into HTML document
  # until an actual wait is needed. Set this to true if you want to allow such behavior.
  loading.unavailable.as.idle = "true"

  #
  # WebElement Validation Service
  #
  validation.enabled = "true"

  #
  # Allow to ingore specific types of elements to be excluded from validation. If the
  # "validation.enabled" is the main power switch on a power strip, then each ignored
  # type acts like an individual power switch for sockets.
  #
  validation.ignoredtypes = [
      #"tag",
      #"attribute-exists",
      #"attribute-is",
      #"class-contains",
      #"input",
      #"input-type",
      #"input-button",
      #"input-checkbox",
      #"input-file",
      #"input-number",
      #"input-password",
      #"input-radio",
      #"input-reset",
      #"input-search",
      #"input-submit",
      "input-text",
      "button",
      "link"
  ]

  #
  # Throw an exception when validation fails. When turned off, logs a WARN level message.
  #
  validation.exception = "true"

}

page.object {

  locate.timeout = "150"

  #
  # Allow PageObject to regenerate the locator by it's ID when ID attribute is available.
  # This is done after PageObject's root element is found by the initial locator. The
  # regenerated locator can improve accuracy of finding elements within the PageObject,
  # as well as shortening the XPath expressions length.
  #
  locate.by.id = true

  timer.style = concise
  #timer.style = verbose
  timer.31s = "off"

}

lookup {

  default.method = "list-and-filter"
  #default.method = "css-selector"
  #default.method = "xpath"

  unlocatable.element = "error"
  #unlocatable.element = "warn"
  #unlocatable.element = "ignore"

}

#
# The settings for SearchContextWait
#
wait {

  #
  # The interval between every poll
  #
  interval = "500"

  #
  # Time out in 5 seconds, this means polling for 10 times
  #
  timeout = "5"

  # Throw or ignore NotFoundException, the default in WebDriverWait is ignore
  not.found = "ignore"
  #not.found = "throw"

}
